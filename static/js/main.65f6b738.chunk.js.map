{"version":3,"sources":["components/Header/Header.jsx","components/DisplaySubmit/DisplaySubmit.jsx","components/FeedBackOne/FeedBackOne.jsx","components/FeedBackTwo/FeedBackTwo.jsx","components/FeedBackThree/FeedBackThree.jsx","components/FeedBackFour/FeedBackFour.jsx","components/Thankyou/Thankyou.jsx","components/Admin/Admin.jsx","components/App/App.jsx","registerServiceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","src","alt","Component","DisplaySubmit","handleClick","feedback","_this","props","reduxState","enterFeedBackReducer","feedbackData","feeling","Feeling","understanding","Understanding","support","Support","comments","Comments","console","log","axios","post","then","response","history","push","catch","err","objects","reducerState","this","key","onClick","connect","FeedBackOne","state","dispatch","type","payload","value","handleChange","event","setState","target","onChange","components_DisplaySubmit_DisplaySubmit","FeedBackTwo","FeedBackThree","FeedBackFour","comment","FeedBackResults","handleClickReset","withRouter","Admin","feedbackList","getFeedback","get","data","handleDelete","id","delete","concat","_this2","table","map","App","HashRouter","components_Header_Header","Route","path","exact","component","Thankyou","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","storeInstance","createStore","combineReducers","arguments","length","undefined","action","Object","objectSpread","defineProperty","applyMiddleware","logger","ReactDOM","render","es","store","components_App_App","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.65f6b738.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Header.css';\n\n\nclass Header extends Component {\n  render () {\n    return (\n      <div className=\"header-box\">\n        {/* <h1 className=\"h1-styling\"></h1> */}\n        <div><img className=\"fb-image\" src=\"images/feedbackxmas.png\" alt=\"Feedback logo\"/></div>\n      </div>\n    )\n  }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\n// Component to displays all the components\nclass DisplaySubmit extends Component {\n\n\n  handleClick = () => {\n    // displays data from redux store in console\n    // console.log('sending data:', this.props.reduxState);\n\n    const feedback = this.props.reduxState.enterFeedBackReducer;\n\n    // assigned data in redux storre to feedbackData and pass it to axios.post()\n    let feedbackData = {\n      feeling: feedback.Feeling,\n      understanding: feedback.Understanding,\n      support: feedback.Support,\n      comments: feedback.Comments\n    }\n\n   console.log('sending data in redux store:', feedbackData);\n\n   // Axios POST to send redux data to DB\n    axios.post('/api/feedback',feedbackData)\n    .then( response => {\n      console.log(response);\n      // url to direct you back to next component/page - thankyou\n      this.props.history.push('/thankyou');\n    })\n    .catch( err => {\n      console.log('ERROR in POST request', err);\n    })\n  }\n  \n  render () {\n\n    // declared empty array to push reducer \"enterFeedBackReducer\" object to display\n    const objects = [];\n    // assigned data from reducer to variable \n    const reducerState = this.props.reduxState.enterFeedBackReducer; // {k:v}\n\n    // loop through object value in reducer and push into object array[]\n    for(const key in reducerState){\n      objects.push(\n        <p className=\"display-p-tag\" key={key}>{key}: {reducerState[key]}</p>\n        );\n    }\n\n    // let displayFeedback = this.props.reduxState.enterFeedBackReducer.map( feedback => {\n    //   return <p key={feedback}> {} {feedback}</p>\n    // })\n    \n    return (\n      <div>\n        <h2>feedback results:</h2>\n          <div>\n          { objects }\n          </div>\n          <button onClick={this.handleClick}>SUBMIT TO DB</button>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (reduxState) => {\n  return {\n    reduxState\n  }\n}\n\nexport default connect(mapStateToProps)(DisplaySubmit);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport DisplaySubmit from '../DisplaySubmit/DisplaySubmit';\n\n\nclass FeedBackOne extends Component {\n\n  state = {\n    feeling: ''\n  }\n\n  // next button to feedback two\n  handleClick = () => {\n    console.log('Feedback one has been clicked');\n    this.props.dispatch({ type: 'ADD_FEEDBACK', payload: {key:'Feeling',value: this.state.feeling}});\n    this.props.history.push(\"/feedbacktwo\");\n    // newFeedBack\n  }\n\n  // handleChange to setState with new data when NEXT button is clicked\n  handleChange = (event) => {\n    this.setState({\n      feeling: event.target.value\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>1 of 4 pages</h2>\n        <div className=\"box\">\n          <div>\n            <p className=\"questions\">How are you feeling today?</p>\n            <input type=\"number\" onChange={this.handleChange}/>\n          </div>\n          <button onClick={this.handleClick}>NEXT</button>\n        </div> {/* .box */}\n        <DisplaySubmit />\n      </div> \n    )\n  }\n}\n\nexport default connect()(FeedBackOne);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport DisplaySubmit from '../DisplaySubmit/DisplaySubmit';\n\n\nclass FeedBackTwo extends Component {\n\n  state = {\n    understanding: ''\n  }\n\n  handleClick = () => {\n    console.log('Two has been clicked');\n    this.props.dispatch({ type: 'ADD_FEEDBACK', payload: {key: 'Understanding', value: this.state.understanding} });\n    this.props.history.push(\"/feedbackthree\");\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      understanding: event.target.value\n    })\n  }\n\n\n  render() {\n    return (\n      <div>\n        <h2>2 of 4 pages</h2>\n        <div className=\"box\">\n          <div>\n            <p className=\"questions\">How well are you understanding the content?</p>\n            <input type=\"number\" onChange={this.handleChange} />\n          </div>\n          <button onClick={this.handleClick}>NEXT</button>\n        </div> {/* .box */}\n        <DisplaySubmit />\n      </div>\n    )\n  }\n}\n\nexport default connect()(FeedBackTwo);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport DisplaySubmit from '../DisplaySubmit/DisplaySubmit';\n\n\nclass FeedBackThree extends Component {\n\n  state = {\n    support: ''\n  }\n\n  // Next button to feedback four\n  handleClick = () => {\n    console.log('Three has been clicked');\n    this.props.dispatch({ type: 'ADD_FEEDBACK', payload: {key:'Support',value: this.state.support} });\n    this.props.history.push(\"/feedbackfour\");\n  }\n\n\n  handleChange = (event) => {\n    this.setState({\n      support: event.target.value\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>3 of 4 pages</h2>\n        <div className=\"box\">\n          <div>\n            <p className=\"questions\">How well are you being supported?</p>\n            <input type=\"number\" onChange={this.handleChange} />\n          </div>\n          <button onClick={this.handleClick}>NEXT</button>\n        </div> {/* .box */}\n        <DisplaySubmit />\n      </div>\n    )\n  }\n}\n\nexport default connect()(FeedBackThree);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport DisplaySubmit from '../DisplaySubmit/DisplaySubmit';\n\n\nclass FeedBackFour extends Component {\n\n  state = {\n    comment: ''\n  }\n\n  handleClick = () => {\n    console.log('Four has been clicked');\n    // dispatch to send data to redux store with key and value\n    this.props.dispatch({ type: 'ADD_FEEDBACK', payload: {key:'Comments',value: this.state.comment}})\n  }\n\n  // function to input value \n  handleChange = (event) => {\n    this.setState({\n      comment: event.target.value\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>4 of 4 pages</h2>\n        <div className=\"box\">\n          <div>\n          <p className=\"questions\">Any comments for us?</p>\n            <input type=\"text\" onChange={this.handleChange} />\n          </div>\n          <button onClick={this.handleClick}>Enter</button>\n        </div>\n        <DisplaySubmit />\n      </div>\n    )\n  }\n}\n\nexport default connect()(FeedBackFour);","import React, { Component } from 'react';\nimport {withRouter} from 'react-router-dom';\nimport { connect } from 'react-redux';\n// import { connect } from 'react-redux';\n\n\nclass FeedBackResults extends Component {\n\n  // state = {\n  //   newFB = ''\n  // }\n\n\n  handleClickReset = () => {\n    console.log('button to reset and back to FB 1');\n    this.props.dispatch({ type:'RESET', payload: {key:'',value: ''}});\n    this.props.history.push(\"/\");\n  }\n\n  render () {\n    return (\n      <div className=\"box\">\n        <h1>Thank you! Your feedback has been submitted.</h1>\n        <button onClick={this.handleClickReset}>New FeedBack</button>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(connect()(FeedBackResults));","import React, { Component } from 'react';\nimport axios from 'axios';\n\n\nclass Admin extends Component {\n\n  state = {\n    feedbackList: []\n  }\n\n  componentDidMount() {\n    this.getFeedback();\n  }\n\n  // GET request to get data from DB to display on DOM\n  getFeedback = () => {\n    axios.get('/api/feedback').then( response => {\n      console.log(response.data);\n      // update state with data from DB\n      this.setState({\n        feedbackList: response.data\n      })\n    }).catch( err => {\n      console.log('Error getting data from the DB:', err);\n    });\n  }\n\n\n  handleDelete = (id) => {\n    console.log('Delete button has been clicked');\n    axios.delete(`/api/feedback/${id}`).then( response => {\n      this.getFeedback();\n    }).catch( err => {\n      console.log(err)\n    })\n  }\n\n  render () {\n    // map array and render to DOM\n    let table = this.state.feedbackList.map( feedback => {\n      return <tr key={feedback.id}>\n              <td>{feedback.feeling}</td>\n              <td>{feedback.understanding}</td>\n              <td>{feedback.support}</td>\n              <td>{feedback.comments}</td>\n              <td><button onClick={ (event) => this.handleDelete(feedback.id)}>DELETE</button></td>\n              </tr>\n    })\n\n    return (\n      <div>\n        <h2>Admin page</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Feeling</th>\n              <th>Understanding</th>\n              <th>Support</th>\n              <th>Comments</th>\n              <th>Delete</th>\n            </tr>\n          </thead>\n          <tbody>\n            { table }\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\nexport default Admin;","import React, { Component } from 'react';\nimport Header from '../Header/Header';\nimport FeedBackOne from '../FeedBackOne/FeedBackOne';\nimport FeedBackTwo from '../FeedBackTwo/FeedBackTwo';\nimport FeedBackThree from '../FeedBackThree/FeedBackThree';\nimport FeedBackFour from '../FeedBackFour/FeedBackFour';\nimport Thankyou from '../Thankyou/Thankyou';\nimport Admin from '../Admin/Admin';\n// import axios from 'axios';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\n\n\n// const styles ={\n//   root: {\n//     background: 'linear-gradient(45deg, #FE6B8B 30%, #FF84E53' 90%)',\n//     borderRadius: 3,\n//     border: 0,\n//     color: 'white',\n//     height: 48,\n//     padding: '0 30px',\n//     boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n//     },\n//\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Router>\n        <div className=\"main\">\n        {/* header can be outside of <Router> */}\n          <Header /> \n          <div className=\"App\">\n            <Route path='/' exact component={FeedBackOne} />\n            <Route path='/feedbacktwo' component={FeedBackTwo} />\n            <Route path='/feedbackthree' component={FeedBackThree} />\n            <Route path='/feedbackfour' component={FeedBackFour} />\n            <Route path='/thankyou' component={Thankyou} />\n            <Route path='/admin' component={Admin} />\n          </div>\n          <img className=\"bg-image\" src=\"images/vegaBG24.png\" alt=\"background\"/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default connect()(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport { Provider } from \"react-redux\";\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\n\n// reducers to add feedbacks\nconst enterFeedBackReducer = (state = {}, action) => {\n  if (action.type === 'ADD_FEEDBACK'){\n    return {...state, [action.payload.key]: action.payload.value}\n    // [ in object is setting key] - setting value equal to the value we are sending\n  } else if (action.type === 'RESET'){\n    return {}\n  }\n  return state\n}\n\nconst storeInstance = createStore(\n  // reducers\n  combineReducers({\n    enterFeedBackReducer\n  }),\n  // enhancer\n  applyMiddleware(logger)\n)\nReactDOM.render(<Provider store={storeInstance}><App /></Provider>, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}